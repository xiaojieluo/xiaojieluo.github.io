<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Hola</title>
    <link>https://xiaojieluo.com/tags/python/</link>
    <description>Recent content in Python on Hola</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Nov 2020 22:14:29 +0800</lastBuildDate><atom:link href="https://xiaojieluo.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python中星号的高级用法</title>
      <link>https://xiaojieluo.com/posts/python%E4%B8%AD%E6%98%9F%E5%8F%B7%E7%9A%84%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 26 Nov 2020 22:14:29 +0800</pubDate>
      
      <guid>https://xiaojieluo.com/posts/python%E4%B8%AD%E6%98%9F%E5%8F%B7%E7%9A%84%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid>
      <description>&lt;p&gt;星号，即乘法运算符，是所有程序中的常用符号。对于我们来说，仅将其用作乘法运算符就足够了。但是，如果真的想成为一名 Python 专家，则必须要掌握星号运算符的高级用法。&lt;/p&gt;
&lt;p&gt;这篇文章将展示星号运算符的五种用法，从基础到深入，提供最容易理解的示例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过实例学习python的fstring</title>
      <link>https://xiaojieluo.com/posts/%E9%80%9A%E8%BF%87%E5%AE%9E%E4%BE%8B%E5%AD%A6%E4%B9%A0python%E7%9A%84fstring/</link>
      <pubDate>Sat, 14 Nov 2020 10:01:33 +0800</pubDate>
      
      <guid>https://xiaojieluo.com/posts/%E9%80%9A%E8%BF%87%E5%AE%9E%E4%BE%8B%E5%AD%A6%E4%B9%A0python%E7%9A%84fstring/</guid>
      <description>&lt;h2 id=&#34;1-什么是-python-的-f-string&#34;&gt;1. 什么是 Python 的 F-String&lt;/h2&gt;
&lt;p&gt;在 Python 的历史中，字符串格式已经发展了很久， 在 Python 3.6 之前，如果想要格式化字符串，可以用 &lt;code&gt;%&lt;/code&gt; 操作符或者 &lt;code&gt;string.Template&lt;/code&gt; 模块，随后出现了 &lt;code&gt;str.format&lt;/code&gt; 方法，并为语言中添加了一种更灵活，更健壮的格式化字符串的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PySide2中加载ui文件的两种方法比较</title>
      <link>https://xiaojieluo.com/posts/pyside2%E4%B8%AD%E5%8A%A0%E8%BD%BDui%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E6%AF%94%E8%BE%83/</link>
      <pubDate>Thu, 12 Sep 2019 13:10:35 +0800</pubDate>
      
      <guid>https://xiaojieluo.com/posts/pyside2%E4%B8%AD%E5%8A%A0%E8%BD%BDui%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%E6%AF%94%E8%BE%83/</guid>
      <description>&lt;p&gt;先将 QtDesigner 生成的.ui 文件转换成 python 类，再在项目中导入这个类。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;pyside2-uic&lt;/code&gt; 这个工具来实现 ui 文件转 python 类的操作，执行以下命令即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;    pyside2-uic mainwindow.ui -o ui_mainwindow.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Tornado中finish之后调用write出现错误</title>
      <link>https://xiaojieluo.com/posts/tornado%E4%B8%ADfinish%E4%B9%8B%E5%90%8E%E8%B0%83%E7%94%A8write%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF/</link>
      <pubDate>Thu, 23 Feb 2017 13:57:04 +0800</pubDate>
      
      <guid>https://xiaojieluo.com/posts/tornado%E4%B8%ADfinish%E4%B9%8B%E5%90%8E%E8%B0%83%E7%94%A8write%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF/</guid>
      <description>参考了 知乎上的答案 , 但是没有实现我想要的效果，最终在翻 tornado.web 的源代码时，找到了一个解决办法
在需要结束的地方抛出个 Finish() 异常就可以了，暂时还不清楚 Tornado 是如何处理这个异常的，以后有时间再看下实现过程
example: from tornado.web import Finish ... ... class IndexHandler(RequestHandler): def get(self): self.write(&amp;#34;Hello&amp;#34;) raise Finish() self.write(&amp;#34;World&amp;#34;) </description>
    </item>
    
  </channel>
</rss>
